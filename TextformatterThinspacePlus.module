<?php

/**
 * ProcessWire Thinspace Plus Module
 *
 * “Flatten” a text by replacing newline characters (as well as repeated
 * consecutive whitespace characters) with just one space character – and also
 * strip any whitespace or line breaks at the beginning and end of the text.
 * Extends Netcarver’s original Thinspace module.
 *
 * @author    Netcarver
 * @author    Michael van Laar <michael@van-laar.de>
 * @copyright Copyright of original Thinspace module (c) 2012, Netcarver (https://github.com/netcarver)
 * 
 * ProcessWire 2.x
 * Copyright (C) 2014 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 *
 */

class TextformatterThinspacePlus extends Textformatter
{
    public static function getModuleInfo()
    {
        return array(
            'title'     => __('Thinspace Plus'),
            'version'   => 100,
            'summary'   => __("“Flatten” a text by replacing newline characters (as well as repeated consecutive whitespace characters) with just one space character – and also strip any whitespace or line breaks at the beginning and end of the text. Extends Netcarver’s original Thinspace module."),
            'author'    => 'Michael van Laar',
            'href' => 'https://github.com/MichaelvanLaar/PW-TextformatterThinspacePlus',
        );
    }



    /**
     * Format the input string
     *
     * @param string $str The block of text to parse
     *
     * The incoming string is replaced with the formatted version of itself.
     **/
    public function format(&$str)
    {
        $str = trim(preg_replace('/\n/u', ' ', $str));
        $str = preg_replace('/(?:\x{20}|\x{a0}){2,}/u', ' ', $str);
        $str = preg_replace("/\n{2,}/u", "\n", $str);
    }
}
